buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.bmuschko:gradle-docker-plugin:6.7.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.bmuschko.docker-remote-api' version '7.0.1'
}

group = 'me.steffenjacobs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '20'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }
}
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

tasks.register('copyJar', Copy) {
	dependsOn 'bootJar'
	from "build/libs/cloud-tester-${project.version}.jar"
	into 'build/docker'
	rename { String fileName ->
		fileName.replace("-${project.version}", "")
	}
}

tasks.register('copyFiles', Copy) {
	from "Dockerfile"
	into 'build/docker'
}

tasks.register('buildDockerImage', DockerBuildImage) {
	dependsOn copyJar
	dependsOn copyFiles
	inputDir = file('build/docker')
	images = ["cloud-tester/cloud-tester"]
}

build.dependsOn buildDockerImage
build.dependsOn copyJar
build.dependsOn copyFiles
